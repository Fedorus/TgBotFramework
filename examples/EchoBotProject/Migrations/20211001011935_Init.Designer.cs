// <auto-generated />
using System;
using EchoBotProject;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EchoBotProject.Migrations
{
    [DbContext(typeof(BotFrameworkContext))]
    [Migration("20211001011935_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.10");

            modelBuilder.Entity("EchoBotProject.Data.EF.Models.Channel", b =>
                {
                    b.Property<long>("ChannelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("ChannelId");

                    b.ToTable("Channels");
                });

            modelBuilder.Entity("EchoBotProject.Data.EF.Models.ChatMemberStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long?>("GroupChatId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.Property<long?>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("GroupChatId");

                    b.HasIndex("UserId");

                    b.ToTable("ChatMemberStatus");
                });

            modelBuilder.Entity("EchoBotProject.Data.EF.Models.GroupChat", b =>
                {
                    b.Property<long>("GroupChatId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ChatType")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("GroupChatId");

                    b.ToTable("GroupChats");
                });

            modelBuilder.Entity("EchoBotProject.Data.EF.Models.State", b =>
                {
                    b.Property<long>("StateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long?>("GroupChatId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Language")
                        .HasColumnType("TEXT");

                    b.Property<int>("Role")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Stage")
                        .HasColumnType("TEXT");

                    b.Property<long>("Step")
                        .HasColumnType("INTEGER");

                    b.HasKey("StateId");

                    b.HasIndex("GroupChatId");

                    b.ToTable("States");
                });

            modelBuilder.Entity("EchoBotProject.Data.EF.Models.Update", b =>
                {
                    b.Property<long>("UpdateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long?>("ChatId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("TEXT");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UpdateObject")
                        .HasColumnType("TEXT");

                    b.Property<long?>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("UpdateId");

                    b.HasIndex("ChatId");

                    b.HasIndex("UserId");

                    b.ToTable("Updates");
                });

            modelBuilder.Entity("EchoBotProject.Data.EF.Models.User", b =>
                {
                    b.Property<long>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("FirstName")
                        .HasColumnType("TEXT");

                    b.Property<long?>("GroupChatId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsBot")
                        .HasColumnType("INTEGER");

                    b.Property<string>("LanguageCode")
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .HasColumnType("TEXT");

                    b.Property<int>("PrivateChatStatus")
                        .HasColumnType("INTEGER");

                    b.Property<long?>("StateId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Username")
                        .HasColumnType("TEXT");

                    b.HasKey("UserId");

                    b.HasIndex("GroupChatId");

                    b.HasIndex("StateId")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("EchoBotProject.Data.UserModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("LanguageCode")
                        .HasColumnType("TEXT");

                    b.Property<int>("Role")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Stage")
                        .HasColumnType("TEXT");

                    b.Property<long>("Step")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("UserModels");
                });

            modelBuilder.Entity("EchoBotProject.Data.EF.Models.ChatMemberStatus", b =>
                {
                    b.HasOne("EchoBotProject.Data.EF.Models.GroupChat", "GroupChat")
                        .WithMany()
                        .HasForeignKey("GroupChatId");

                    b.HasOne("EchoBotProject.Data.EF.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("GroupChat");

                    b.Navigation("User");
                });

            modelBuilder.Entity("EchoBotProject.Data.EF.Models.State", b =>
                {
                    b.HasOne("EchoBotProject.Data.EF.Models.GroupChat", "GroupChat")
                        .WithMany()
                        .HasForeignKey("GroupChatId");

                    b.Navigation("GroupChat");
                });

            modelBuilder.Entity("EchoBotProject.Data.EF.Models.Update", b =>
                {
                    b.HasOne("EchoBotProject.Data.EF.Models.GroupChat", "GroupChat")
                        .WithMany()
                        .HasForeignKey("ChatId");

                    b.HasOne("EchoBotProject.Data.EF.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("GroupChat");

                    b.Navigation("User");
                });

            modelBuilder.Entity("EchoBotProject.Data.EF.Models.User", b =>
                {
                    b.HasOne("EchoBotProject.Data.EF.Models.GroupChat", null)
                        .WithMany("Users")
                        .HasForeignKey("GroupChatId");

                    b.HasOne("EchoBotProject.Data.EF.Models.State", "State")
                        .WithOne("User")
                        .HasForeignKey("EchoBotProject.Data.EF.Models.User", "StateId");

                    b.Navigation("State");
                });

            modelBuilder.Entity("EchoBotProject.Data.EF.Models.GroupChat", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("EchoBotProject.Data.EF.Models.State", b =>
                {
                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
